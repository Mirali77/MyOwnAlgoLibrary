//https://atcoder.jp/contests/arc163/tasks/arc163_d
#include <iostream>
#include <string>
#include <deque>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <map>
#include <set>
#include <queue>
#include <fstream>
#include <stack>
#include <cmath>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
#include <random>
#include <array>
#include <chrono>
#include <functional>
#include <numeric>
#include <complex>
using namespace std;

#define ll long long
#define ld long double
#define ull unsigned ll

#define forn(i, n) for (ll i = 1; i <= n; i++)
#define dforn(i, a, b) for (ll i = a; i <= b; i++) 
#define rforn(i, n) for (ll i = n; i >= 1; i--)
#define rdforn(i, a, b) for (ll i = b; i >= a; i--)
#define sforn(i, a, b, s) for (ll i = a; i <= b; i += s)
#define aforn(v, a) for (auto& v : a)

const ll mod = 998244353;
const ld pi = acos(-1);
const ll N = 2e5;
const ll inf = 1e16;
const ld dinf = 1e15;
const double eps = 1e-6;

ll binpow(ll n, ll a) {
	if (n == 0) {
		return 1;
	}
	if (n % 2 == 0) {
		return binpow(n / 2, a * a % mod);
	}
	return a * binpow(n - 1, a) % mod;
}

void solve() {
	ll n, m;
	cin >> n >> m;
	vector<ll> fact(n + 1), rfact(n + 1);
	fact[0] = rfact[0] = 1;
	forn(i, n) {
		fact[i] = fact[i - 1] * i % mod;
		rfact[i] = binpow(mod - 2, fact[i]);
	}
	auto C = [&](ll k, ll n) {
		if (k > n) {
			return 0LL;
		}
		return fact[n] * rfact[k] % mod * rfact[n - k] % mod;
	};
	vector<vector<vector<ll>>> dp(n + 1, vector<vector<ll>>(n + 1, vector<ll>(m + 1)));
	dp[0][0][0] = 1;
	dforn(i, 0, n - 1) {
		dforn(j, 0, i) {
			dforn(k, 0, m) {
				dforn(h, 0, m - k) {
					(dp[i + 1][j + 1][k + h] += C(h, j) * dp[i][j][k] % mod) %= mod;
				}
				dforn(h, j, m - k) {
					(dp[i + 1][j][k + h] += C(h - j, i - j) * dp[i][j][k] % mod) %= mod;
				}
			}
		}
	}
	ll ans = 0;
	dforn(j, 0, n - 1) {
		(ans += dp[n][j][m]) %= mod;
	}
	cout << ans << '\n';
}

int main()
{
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int t = 1;
	//cin >> t;
	while (t--) solve();
	return 0;
}